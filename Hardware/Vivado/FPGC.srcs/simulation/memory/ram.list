00011100000000000000000100010001 //Set r1 to 1
00011100000000000000001000100010 //Set r2 to 2
00011100000000000000001100110011 //Set r3 to 3
00011100000000000000010001000100 //Set r4 to 4
00011100000000000000010101010101 //Set r5 to 5
00011100000000000000011001100110 //Set r6 to 6
00011100000000000000011101110111 //Set r7 to 7
00011100000000000000100010001000 //Set r8 to 8
00011100000000000000100110011001 //Set r9 to 9
00011100000000000000101010101010 //Set r10 to 10
00011100000000000000101110111011 //Set r11 to 11
00011100000000000000110011001100 //Set r12 to 12
00011100000000000000110111011101 //Set r13 to 13
00011100000000000000111011101110 //Set r14 to 14
00000011000000000000000100010001 //Compute r1 + r1 and write result to r1
00000011000000000000001000100010 //Compute r2 + r2 and write result to r2
00000011000000000000001100110011 //Compute r3 + r3 and write result to r3
00000011000000000000010001000100 //Compute r4 + r4 and write result to r4
00000011000000000000010101010101 //Compute r5 + r5 and write result to r5
00000011000000000000011001100110 //Compute r6 + r6 and write result to r6
00000011000000000000011101110111 //Compute r7 + r7 and write result to r7
01101111111111101011000100101000 //(unsigned) If r1 != r2, then jump to offset -21
00000011000000000000100010001000 //Compute r8 + r8 and write result to r8
00000011000000000000100110011001 //Compute r9 + r9 and write result to r9
00000011000000000000101010101010 //Compute r10 + r10 and write result to r10
00000011000000000000101110111011 //Compute r11 + r11 and write result to r11
00000011000000000000110011001100 //Compute r12 + r12 and write result to r12
00000011000000000000110111011101 //Compute r13 + r13 and write result to r13
00000011000000000000111011101110 //Compute r14 + r14 and write result to r14
11111111111111111111111111111111 //Halt
