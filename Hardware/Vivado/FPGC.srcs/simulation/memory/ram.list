10010000000000000000000000000110
10010000000000000000000010011000
00000000000000000000000001010110
11111111111111111111111111111111
00011100000000000000000000110011 // UART tx address
00011101000001110000000000110011 // UART tx address
11100000000000000001001100000001 // Read data from UART (tx + 1 = rx)
00011100000000000000000000100010
01100000000000000010001011001000
00010101000000000001100000010001 // First byte, shift to highest byte
00011100000000000000000100100010
01100000000000000010001011001000
00010101000000000001000000010001 // Second byte, shift to second highest byte
00011100000000000000001000100010
01100000000000000010001011001000
00010101000000000000100000010001 // Third byte, shift to second lowest byte
00000011000000000000111100011111 // Add to length
00010011000000000000000111001100 // Increment byte shift counter
00011100000000000000010000100010
01100000000000000010110000100000
01000000000000000000000000000000 // Not done yet, wait for next byte
00010110000000000001100011110001 // Get highest byte
11010000000000000000001100010000 // Send byte
00010110000000000001000011110001 // Get second highest byte
11010000000000000000001100010000 // Send byte
00010110000000000000100011110001 // Get second lowest byte
11010000000000000000001100010000 // Send byte
00010110000000000000000011110001 // Get lowest byte
11010000000000000000001100010000 // Send byte
00011100000000000000000110101010 // Set length received flag
00011100000000000000000011001100 // Reset byte shift counter
01000000000000000000000000000000 // Return from interrupt, wait for next byte
00011100000000000000000000110011 // UART tx address
00011101000001110000000000110011 // UART tx address
11100000000000000001001100000001 // Read data from UART (tx + 1 = rx)
00011100000000000000000000100010
01100000000000000010001011001000
00010101000000000001100000010001 // First byte, shift to highest byte
00011100000000000000000100100010
01100000000000000010001011001000
00010101000000000001000000010001 // Second byte, shift to second highest byte
00011100000000000000001000100010
01100000000000000010001011001000
00010101000000000000100000010001 // Third byte, shift to second lowest byte
00000011000000000000110100011101 // Add to current word
00010011000000000000000111001100 // Increment byte shift counter
00011100000000000000010000100010
01100000000000000010110000100000
01000000000000000000000000000000 // Not done yet, wait for next byte
11010000000000000000111011010000 // Write word to RAM
00010011000000000000000111101110 // Increment RAM address
00011100000000000000000011011101 // Reset current word
00011100000000000000000011001100 // Reset byte shift counter
01100000000000000010111011110000
01000000000000000000000000000000 // Not done yet, wait for next byte
00011100000000000110010000010001 // ASCII 'd'
11010000000000000000001100010000 // Send byte
00011100000000000000000000010001
00011100000000000000000000100010
00011100000000000000000000110011
00011100000000000000000001000100
00011100000000000000000001010101
00011100000000000000000001100110
00011100000000000000000001110111
00011100000000000000000010001000
00011100000000000000000010011001
00011100000000000000000010101010
00011100000000000000000010111011
00011100000000000000000011001100
00011100000000000000000011011101
00011100000000000000000011101110
00011100000000000000000011111111
00000000000000000000000000000000
01110000000000000000000000000000 // Clear cache
00000000000000000000000000000000
01000000000000000000000000000000
11000000000000000000000000000001
00011100000000000000000100100010
01100000000000000010000100100000
01000000000000000000000000000000 // Not UART RX interrupt, return
01100000000000000010001010100000
10010000000000000000000000001000 // Length not received yet, receive it first
10010000000000000000000001000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
