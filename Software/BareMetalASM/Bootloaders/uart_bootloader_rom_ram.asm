; Bootloader for the FPGC
; Does the following:
; - Clears VRAM
; - Displays splash screen logo
; - Checks the MU boot mode pin
; - If low, copies the UART bootloader from ROM to RAM and jumps to it
; - If high, reads the SPI flash and copies the bootloader to RAM and jumps to it
; The UART bootloader is included in this file as data words, assembled separately

#include "uart_bootloader_ram_compiled.asm"

Main:

    ; We start the bootloader by clearing the cache and registers in case of a reset
    ResetRegsCache:
        load 0 r1
        load 0 r2
        load 0 r3
        load 0 r4
        load 0 r5
        load 0 r6
        load 0 r7
        load 0 r8
        load 0 r9
        load 0 r10
        load 0 r11
        load 0 r12
        load 0 r13
        load 0 r14
        load 0 r15

        ccache
        nop

    ;jump CheckBootMode ; For testing bootloader in simulation
    ;jump SplashScreen ; Skip init vram in simulation

    ClearVRAM32:
        load32 0x7900000 r1     ; VRAM32 address
        load 0 r2               ; r2 = 0, counter
        load32 0x420 r3         ; r3 = loop end

        ClearVRAM32Loop:
            write 0 r1 r0        ; write 0 to VRAM
            add r1 1 r1          ; increase address
            add r2 1 r2          ; increase counter

            beq r3 r2 2          ; keep looping until all words are cleared
                jump ClearVRAM32Loop

    ClearVRAM8:
        load32 0x7A00000 r1     ; VRAM8 address
        load 0 r2               ; r2 = 0, counter
        load32 0x2002 r3        ; r3 = loop end

        ClearVRAM8Loop:
            write 0 r1 r0        ; write 0 to VRAM
            add r1 1 r1          ; increase address
            add r2 1 r2          ; increase counter

            beq r3 r2 2          ; keep looping until all words are cleared
                jump ClearVRAM8Loop

    ClearVRAMPX:
        load32 0x7B00000 r1     ; VRAMPX address
        load 0 r2               ; r2 = 0, counter
        load32 0x12C00 r3       ; r3 = loop end

        ClearVRAMPXLoop:
            write 0 r1 r0        ; write 0 to VRAM
            add r1 1 r1          ; increase address
            add r2 1 r2          ; increase counter

            beq r3 r2 2          ; keep looping until all words are cleared
                jump ClearVRAMPXLoop


    SplashScreen:
        ; set palette table
        load32 0x7900000 r1     ; VRAM32 address
        load 0b10010 r2         ; blue/green as main color, others black
        write 0x400 r1 r2         ; 0x400 for palette[0] address

        ; copy pattern table
        addr2reg LOGOTABLE r2   ; r2 = data source
        add r1 256 r3           ; r1 = loop end

        CopyPatternLoop:
            ; copy data to VRAM      
            read 0 r2 r4
            write 0 r1 r4
            add r2 1 r2         ; increase source address
            add r1 1 r1         ; increase dest address

            beq r3 r1 2         ; keep looping until all words are copied
                jump CopyPatternLoop


        ; copy window tile table
        load32 0x7A0119D r1     ; window tile address + 0x19D offset
        addr2reg TILETABLE r2   ; r2 = data source
        load 0 r6               ; r6 = loop counter
        load 96 r3              ; r1 = loop end
        load 16 r5              ; r5 = 16, number of tiles per row

        CopyTileLoop:
            ; copy data to VRAM      
            read 0 r2 r4
            write 0 r1 r4
            add r2 1 r2         ; increase source address
            add r1 1 r1         ; increase dest address
            sub r5 1 r5         ; decrease tiles/row counter
            add r6 1 r6         ; increase total tiles copied counter

            bne r5 r0 3
                load 16 r5          ; reset tiles/row counter
                add r1 24 r1        ; skip to next row

            beq r3 r6 2         ; keep looping until all tiles are copied
                jump CopyTileLoop


    CheckBootMode:
        load32 0x7000000 r1 ; MU address
        read 0x19 r1 r2     ; Boot mode
        bne r2 r0 2         ; On low, jump to copy UART bootloader
            jump CopyUARTbootloader
        jump SPIflashBootloader
    

    CopyUARTbootloader:
        addr2reg UART_Bootloader_RAM_code r2
        read 2 r2 r1 ; Read third word, should be the program length
        add r1 1 r1 ; Add one to be sure we copy the full program
        load 0 r3  ; Loop counter
        load32 0x3FF000 r5 ; Dest address start

        ; First write the first two words to address 0 for the halt and interrupt address
        read 0 r2 r4 ; Read first word (should be halt)
        write 0 r0 r4 ; Write word to RAM
        read 1 r2 r4 ; Read second word (should be interrupt address)
        write 1 r0 r4 ; Write word to RAM

        CopyUARTcodeLoop:
            read 0 r2 r4 ; Read word from UART_Bootloader_RAM_code
            write 0 r5 r4 ; Write word to RAM
            add r3 1 r3 ; Increment counter
            add r5 1 r5 ; Increment dest address
            add r2 1 r2 ; Increment source address
            beq r1 r3 2 ; If done, exit loop
                jump CopyUARTcodeLoop

    jump BootRAM


    SPIflashBootloader:
        ; SPI flash 1 CS offset:    09
        ; SPI flash 1 data offset : 08
        load32 0x7000000 r1       ; IO base address

        ReadSPIprogramLength:
            write 0x9 r1 r0       ; CS low

            ; Read 4 bytes from SPI flash
            load 0x3 r2         ; Read command
            load 8 r3           ; Address of program length
            write 0x8 r1 r2     ; Send command
            write 0x8 r1 r0     ; Send address byte 1
            write 0x8 r1 r0     ; Send address byte 2
            write 0x8 r1 r3     ; Send address byte 3
            write 0x8 r1 r0     ; Dummy byte to read
            read 0x8 r1 r4      ; Read byte 1
            shiftl r4 24 r4     ; Shift to correct position
            write 0x8 r1 r0     ; Dummy byte to read
            read 0x8 r1 r5      ; Read byte 2
            shiftl r5 16 r5     ; Shift to correct position
            add r4 r5 r4        ; Combine
            write 0x8 r1 r0     ; Dummy byte to read
            read 0x8 r1 r5      ; Read byte 3
            shiftl r5 8 r5      ; Shift to correct position
            add r4 r5 r4        ; Combine
            write 0x8 r1 r0     ; Dummy byte to read
            read 0x8 r1 r5      ; Read byte 4
            add r4 r5 r4        ; Combine

            load 1 r3
            write 0x9 r1 r3     ; CS high
            ; r4 now contains the program length
            nop
            nop

        CopySPIprogramToRAM:
            load 0 r3           ; RAM address
            write 0x9 r1 r0     ; CS low

            load 0x3 r2         ; Read command
            write 0x8 r1 r2     ; Send command
            write 0x8 r1 r0     ; Send address byte 1
            write 0x8 r1 r0     ; Send address byte 2
            write 0x8 r1 r0     ; Send address byte 3

            SPIreadCopyLoop:
                write 0x8 r1 r0     ; Dummy byte to read
                read 0x8 r1 r5      ; Read byte
                shiftl r5 24 r5     ; Shift to correct position
                write 0x8 r1 r0     ; Dummy byte to read
                read 0x8 r1 r6      ; Read byte
                shiftl r6 16 r6     ; Shift to correct position
                add r5 r6 r5        ; Combine
                write 0x8 r1 r0     ; Dummy byte to read
                read 0x8 r1 r6      ; Read byte
                shiftl r6 8 r6      ; Shift to correct position
                add r5 r6 r5        ; Combine
                write 0x8 r1 r0     ; Dummy byte to read
                read 0x8 r1 r6      ; Read byte
                add r5 r6 r5        ; Combine

                write 0 r3 r5        ; Write to RAM
                add r3 1 r3          ; Increment RAM address
                sub r4 1 r4          ; Decrement program length
                bles r4 r0 2         ; If length <= 0 (signed), exit loop
                    jump SPIreadCopyLoop

        jump BootRAM



    BootRAM:
        load 0 r1
        load 0 r2
        load 0 r3
        load 0 r4
        load 0 r5
        load 0 r6
        load 0 r7
        load 0 r8
        load 0 r9
        load 0 r10
        load 0 r11
        load 0 r12
        load 0 r13
        load 0 r14
        load 0 r15

        ccache
        nop
        jump 0

    halt





TILETABLE:
    .dw 0  1  2  3  4  5  0  0  0  0  0  0  0  0  0  0
    .dw 6  7  8  9  10 11 12 0  0  0  0  0  0  0  0  0
    .dw 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0  0
    .dw 29 30 31 32 33 34 35 36 37 38 39 40 41 42 0  0
    .dw 45 46 47 48 49 50 51 0  0  52 53 54 55 56 0  0
    .dw 58 59 60 61 62 63 0  0  0  0  0  0  0  0  0  0

LOGOTABLE:
    .dw 0 0 0 0 ; tile 0, background, so always empty
    .dw 0b00000000000000000000000000000011
    .dw 0b00000000000000110000000000000000
    .dw 0b00000000110000000000001111110000
    .dw 0b00000000111111000000000000111111 ; tile  1
    .dw 0b00000000000000001100000000000000
    .dw 0b11110000000000001111110000000000
    .dw 0b00111111000011110000110000111111
    .dw 0b00000000111111000000001111111100 ; tile  2
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000011
    .dw 0b11111111000011111111111111000011
    .dw 0b00000011111100000000000011111100 ; tile  3
    .dw 0b00000000000000000011110000000000
    .dw 0b11111100000000001111000000000000
    .dw 0b11000000001111000000000011111100
    .dw 0b00000011111100000000111111000000 ; tile  4
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000011000000000000 ; tile  5
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000011110000
    .dw 0b00000000111111000000000000111111
    .dw 0b00110000000011111111110000000011 ; tile  6
    .dw 0b11110000000011111111110000000000
    .dw 0b00111111000000000000111111000011
    .dw 0b00000011000011110000000000111111
    .dw 0b11000000111111001100001111110000 ; tile  7
    .dw 0b00001111110011110011111100000011
    .dw 0b11111100000000001111110000000000
    .dw 0b11001111000000000000001111000000
    .dw 0b00000000111100000000000000111100 ; tile  8
    .dw 0b00000000001111111100000000001111
    .dw 0b11110000000000110011110000000000
    .dw 0b00001111000000000000001111000000
    .dw 0b00000000111100000000000000111100 ; tile  9
    .dw 0b00001111000000001100000000000011
    .dw 0b11110000000011111111110000111111
    .dw 0b00111111000011000000111111000000
    .dw 0b00000011111100000000000011111100 ; tile  10
    .dw 0b11111100000000001111000000000000
    .dw 0b11000000000000000000000011110000
    .dw 0b00000011111100000000111111000000
    .dw 0b00111111000000000011110000000011 ; tile  00
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b11000000000000001111000000000000 ; tile  12
    .dw 0b00111111000000000000111111000000
    .dw 0b00000011111100000000000011000011
    .dw 0b00000000000011110000000000111111
    .dw 0b00000000111111000000000011110000 ; tile  13
    .dw 0b00001111110000000011111100000000
    .dw 0b11111100000000001111000000000000
    .dw 0b11000000001111110000000000110011
    .dw 0b00000000111111110000001111000000 ; tile  14
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111 ; tile  15
    .dw 0b11111111111111111111111111111111
    .dw 0b11111111111111111100000000000000
    .dw 0b11000000000000001100000000000000
    .dw 0b11111111111111001111111111111100 ; tile  16
    .dw 0b11111100001111111111110000001111
    .dw 0b11111100000000110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  17
    .dw 0b00000000000011111100000000111111
    .dw 0b11110000111111001111110000110000
    .dw 0b00111111000000000000111111000000
    .dw 0b00111111111100001111000011110000 ; tile  18
    .dw 0b11000011111111110000001111111111
    .dw 0b00000011111111110000001111111111
    .dw 0b00000011111111110000001111111111
    .dw 0b00000011111111110000001111111111 ; tile  19
    .dw 0b11111111111111001111111111111100
    .dw 0b11111111111111000000000000111111
    .dw 0b00000000001111110000000000111111
    .dw 0b00000000001111110000000000111111 ; tile  20
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000001111000000001111
    .dw 0b11110000000011111111000000001111
    .dw 0b11110000000011111111000000001111 ; tile  21
    .dw 0b00111111111111110011111111111111
    .dw 0b00111111111111111111110000000000
    .dw 0b11111100000000001111110000000000
    .dw 0b11111100000000001111110000000000 ; tile  22
    .dw 0b11111111110000001111111111000000
    .dw 0b11111111110000000000001111111111
    .dw 0b00000011111111110000001111111111
    .dw 0b00000000000000000000000000000000 ; tile  23
    .dw 0b00000000000000110000000000000011
    .dw 0b00000000000000110000000011111111
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111 ; tile  24
    .dw 0b11111111111111111111111111111111
    .dw 0b11111111111111111100000000000000
    .dw 0b11000000000000001100000000000000
    .dw 0b11000000000000001100000000000000 ; tile  25
    .dw 0b11111100000000001111110000000000
    .dw 0b11111100000000000011111111110000
    .dw 0b00111111111100000011111111110000
    .dw 0b00000000000000000000000000000000 ; tile  26
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000001111
    .dw 0b00000000000011110000000011111111
    .dw 0b00000000111111000000111111111100 ; tile  27
    .dw 0b00111111110000000011111111000000
    .dw 0b00111111110000001111111111000000
    .dw 0b11111111110000001111111111000000
    .dw 0b00111111110000000011111111000000 ; tile  28
    .dw 0b00000000111100000000000011110000
    .dw 0b00000000111111000000000000111111
    .dw 0b00000000000011110000000011000011
    .dw 0b00000011111100000000111111000000 ; tile  29
    .dw 0b00001111000000000011110000001111
    .dw 0b11110000000011001100000000001111
    .dw 0b11000000001111001111000011110000
    .dw 0b11111111110000000011111100000000 ; tile  30
    .dw 0b00000000111111111100000011111111
    .dw 0b11000000111111111100000011111111
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111 ; tile  31
    .dw 0b11111111111111001100000000000000
    .dw 0b11000000000000001100000000000000
    .dw 0b11000000000011111100000000001100
    .dw 0b11000000000011111111000000000000 ; tile  32
    .dw 0b00000000000000110000000011111111
    .dw 0b00000000110011000000000011111100
    .dw 0b11000000000000001100000000000000
    .dw 0b11000000000000111111000000001111 ; tile  33
    .dw 0b11000000111100000000000011110000
    .dw 0b00000011111100000000111111000000
    .dw 0b00111111000000001111110000110000
    .dw 0b11110000111111001100000000111111 ; tile  34
    .dw 0b00000011111111110000001111111111
    .dw 0b00000011111111110000001111111111
    .dw 0b00000011111111110000001111111111
    .dw 0b00000011111111110000001111111111 ; tile  35
    .dw 0b00000000001111111111111111111100
    .dw 0b11111111111111001111111111111100
    .dw 0b11111111111111000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  36
    .dw 0b11110000000011110000000000001111
    .dw 0b00000000000011110000000000001111
    .dw 0b00000000000011110000000000001111
    .dw 0b00000000000011110000000000001111 ; tile  37
    .dw 0b11111100000000001111110000000000
    .dw 0b11111100000000001111110000000000
    .dw 0b11111100000000001111110000000000
    .dw 0b11111100000000001111110000000000 ; tile  38
    .dw 0b00000000000000001111111111111111
    .dw 0b11111111111111111111111111111111
    .dw 0b11111111111111110000001111111111
    .dw 0b00000011111111110000001111111111 ; tile  39
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000011111111 ; tile  40
    .dw 0b11000000000000001100000000000000
    .dw 0b11000000000000001100000000000000
    .dw 0b11000000000000001100000000000000
    .dw 0b11000000000000001100000000000000 ; tile  41
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000011111111110000
    .dw 0b00111111111100000011111111110000 ; tile  42
    .dw 0b00001111110000001111111111000000
    .dw 0b11111100000000001111111111111111
    .dw 0b11111111111111111111111111111111
    .dw 0b00000000000000000000000000000000 ; tile  43
    .dw 0b00111111110000000011111111000000
    .dw 0b00111111110000001111111111111111
    .dw 0b11111111111111111111111111111111
    .dw 0b00111111110000000011111111000000 ; tile  44
    .dw 0b00111111000000001111110000000011
    .dw 0b00110000000011110000000000111111
    .dw 0b00000000111111000000000011110000
    .dw 0b00000000000000000000000000000000 ; tile  45
    .dw 0b00001111110000001100001111110000
    .dw 0b11000000111111000000000000111111
    .dw 0b00000011000011110000111111000011
    .dw 0b00111111000000001111110000000000 ; tile  46
    .dw 0b00000000111111110000000011111111
    .dw 0b00000000111111110000000000001111
    .dw 0b11000000000011111111000000111100
    .dw 0b11111100111100000011111111000000 ; tile  47
    .dw 0b11111100000000001100111100000000
    .dw 0b11000011110000000000000011110000
    .dw 0b00000000001111000000000000001111
    .dw 0b00000000000000110000000000001111 ; tile  48
    .dw 0b00111100001111110000111111111100
    .dw 0b00000011111100000000111111000000
    .dw 0b00111111000011001111110000111111
    .dw 0b11110000000011111100000000000011 ; tile  49
    .dw 0b00000000000011110011110000000011
    .dw 0b00111111000000000000111111000000
    .dw 0b00000011111100000000000011110000
    .dw 0b11000000000000001111000000000000 ; tile  50
    .dw 0b11000011111111111111001111111111
    .dw 0b11000011111111110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  51
    .dw 0b00111111111111110011111111111111
    .dw 0b00111111111111110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  52
    .dw 0b11111111111111111111111111111111
    .dw 0b11111111111111110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  53
    .dw 0b00000000000000110000000000000011
    .dw 0b00000000000000110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  54
    .dw 0b11111111111111111111111111111111
    .dw 0b11111111111111110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  55
    .dw 0b11111100000000001111110000000000
    .dw 0b11111100000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  56
    .dw 0b00111111110000000011111111000000
    .dw 0b00111111110000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  57
    .dw 0b00000000000000110000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  58
    .dw 0b11110000000011111100000000111111
    .dw 0b00000000111111000000001111110000
    .dw 0b00000011110000000000000000000000
    .dw 0b00000000000000110000000000000011 ; tile  59
    .dw 0b00001111110000000000001111110000
    .dw 0b00000000111111000000110000111111
    .dw 0b00111111000011111111110000000000
    .dw 0b11110000000000001100000000000000 ; tile  60
    .dw 0b00000000001111110000000011111100
    .dw 0b00000011111100001111111111000011
    .dw 0b11111111000011110000000000000011
    .dw 0b00000000000000000000000000000000 ; tile  61
    .dw 0b00001111000000000000111111000000
    .dw 0b00000011111100000000000011111100
    .dw 0b11000000001111001111000000000000
    .dw 0b11111100000000000011110000000000 ; tile  62
    .dw 0b11111100000000000011000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000
    .dw 0b00000000000000000000000000000000 ; tile  63
